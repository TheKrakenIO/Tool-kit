#!/bin/bash

# ExploitDB Search Script
# Version: 1.0
# Description: Optimized script to search for exploits using searchsploit, nmap, and metasploit

# Configuration
LOG_DIR="/var/log/exploitdb"
LOG_FILE="$LOG_DIR/exploitdb_search_$(date +%Y%m%d_%H%M%S).log"
OUTPUT_DIR="exploitdb_outputs"
SEARCHSPLOIT_BIN=$(command -v searchsploit 2>/dev/null)
NMAP_BIN=$(command -v nmap 2>/dev/null)
MSFCONSOLE_BIN=$(command -v msfconsole 2>/dev/null)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to display banner
print_banner() {
  echo -e "${GREEN}"
  echo " _________"
  echo "|         |"
  echo "| exploit |"
  echo "|    db   |"
  echo "|_________|"
  echo -e "${NC}"
  echo ""
}

# Function to display separator
print_separator() {
  echo ""
  echo -e "${YELLOW}---------------------------------------------------------------${NC}"
  echo -e "${YELLOW}--------------------       ^_^         ------------------------${NC}"
  echo -e "${YELLOW}---------------------------------------------------------------${NC}"
  echo ""
}

# Function to display messages
log_message() {
  local level="$1"
  local message="$2"
  local timestamp
  timestamp=$(date '+%Y-%m-%d %H:%M:%S')
  
  case "$level" in
    "INFO")  color="$GREEN" ;;
    "WARN")  color="$YELLOW" ;;
    "ERROR") color="$RED" ;;
    *)       color="$NC" ;;
  esac
  
  echo -e "${color}[${timestamp}] ${level}: ${message}${NC}" | tee -a "$LOG_FILE"
}

# Function to validate input
validate_input() {
  local input="$1"
  if [[ -z "$input" || ! "$input" =~ ^[a-zA-Z0-9_-]+$ ]]; then
    log_message "ERROR" "Invalid input. Use alphanumeric characters, underscores, or hyphens."
    exit 1
  fi
}

# Function to check prerequisites
check_prerequisites() {
  # Check if searchsploit is installed
  if [ -z "$SEARCHSPLOIT_BIN" ]; then
    log_message "ERROR" "searchsploit is not installed. Please install exploitdb."
    exit 1
  fi

  # Check if nmap is installed
  if [ -z "$NMAP_BIN" ]; then
    log_message "ERROR" "nmap is not installed. Please install nmap."
    exit 1
  fi

  # Check if metasploit is installed
  if [ -z "$MSFCONSOLE_BIN" ]; then
    log_message "ERROR" "metasploit is not installed. Please install metasploit-framework."
    exit 1
  fi

  # Create log directory
  mkdir -p "$LOG_DIR" || {
    log_message "ERROR" "Failed to create log directory: $LOG_DIR"
    exit 1
  }

  # Create output directory
  mkdir -p "$OUTPUT_DIR" || {
    log_message "ERROR" "Failed to create output directory: $OUTPUT_DIR"
    exit 1
  }
}

# Function to search with searchsploit
run_searchsploit() {
  local search_term="$1"
  local output_file="$OUTPUT_DIR/searchsploit_$(date +%Y%m%d_%H%M%S).txt"
  
  log_message "INFO" "Searching for exploits using searchsploit with term: $search_term"
  if ! "$SEARCHSPLOIT_BIN" -w "$search_term" > "$output_file" 2>> "$LOG_FILE"; then
    log_message "ERROR" "searchsploit search failed. Check $LOG_FILE for details."
    return 1
  else
    log_message "INFO" "searchsploit search completed. Results saved to $output_file"
    return 0
  fi
}

# Function to search nmap scripts
run_nmap_search() {
  local search_term="$1"
  local output_file="$OUTPUT_DIR/nmap_scripts_$(date +%Y%m%d_%H%M%S).txt"
  
  log_message "INFO" "Searching for nmap scripts with term: $search_term"
  if ! ls -al /usr/share/nmap/scripts/ | grep -i "$search_term" > "$output_file" 2>> "$LOG_FILE"; then
    log_message "WARN" "No nmap scripts found matching: $search_term"
    return 1
  else
    log_message "INFO" "nmap script search completed. Results saved to $output_file"
    return 0
  fi
}

# Function to search with metasploit
run_metasploit_search() {
  local search_term="$1"
  local output_file="$OUTPUT_DIR/metasploit_$(date +%Y%m%d_%H%M%S).txt"
  
  log_message "INFO" "Searching for exploits using metasploit with term: $search_term"
  if ! "$MSFCONSOLE_BIN" -q -x "search $search_term; exit" > "$output_file" 2>> "$LOG_FILE"; then
    log_message "ERROR" "metasploit search failed. Check $LOG_FILE for details."
    return 1
  else
    log_message "INFO" "metasploit search completed. Results saved to $output_file"
    return 0
  fi
}

# Main function
main() {
  print_banner
  print_separator

  # Validate input
  if [ $# -ne 1 ]; then
    log_message "ERROR" "Usage: $0 <search_term>"
    exit 1
  fi
  validate_input "$1"
  local search_term="$1"

  # Check prerequisites
  check_prerequisites

  # Run searches
  run_searchsploit "$search_term"
  print_separator

  run_nmap_search "$search_term"
  print_separator

  run_metasploit_search "$search_term"
  print_separator

  log_message "INFO" "All searches completed. Results saved in $OUTPUT_DIR"
  log_message "INFO" "Logs saved to $LOG_FILE"
}

# Execute main function
main "$@"
